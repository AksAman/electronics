$date
	Mon Sep 26 02:12:17 2011
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module addsub_4bit_tb $end
$var wire 1 ! c_out $end
$var wire 4 " s [3:0] $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % d $end
$scope module uut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 3 ( c [2:0] $end
$var wire 1 ! c_out $end
$var wire 1 ) d $end
$var wire 4 * s [3:0] $end
$var wire 4 + x [3:0] $end
$scope module adder_a $end
$var wire 1 , a0 $end
$var wire 1 - a1 $end
$var wire 1 . a2 $end
$var wire 1 ) c_in $end
$var wire 1 / c_out $end
$var wire 1 0 s $end
$var wire 1 1 x $end
$var wire 1 2 y $end
$upscope $end
$scope module adder_b $end
$var wire 1 3 a0 $end
$var wire 1 4 a1 $end
$var wire 1 5 a2 $end
$var wire 1 6 c_in $end
$var wire 1 7 c_out $end
$var wire 1 8 s $end
$var wire 1 9 x $end
$var wire 1 : y $end
$upscope $end
$scope module adder_c $end
$var wire 1 ; a0 $end
$var wire 1 < a1 $end
$var wire 1 = a2 $end
$var wire 1 > c_in $end
$var wire 1 ? c_out $end
$var wire 1 @ s $end
$var wire 1 A x $end
$var wire 1 B y $end
$upscope $end
$scope module adder_d $end
$var wire 1 C a0 $end
$var wire 1 D a1 $end
$var wire 1 E a2 $end
$var wire 1 F c_in $end
$var wire 1 ! c_out $end
$var wire 1 G s $end
$var wire 1 H x $end
$var wire 1 I y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
b0 +
b0 *
0)
b0 (
b0 '
b0 &
0%
b0 $
b0 #
b0 "
0!
$end
#10
10
18
1@
1G
b1111 "
b1111 *
1,
13
1;
1C
12
1:
1B
1I
b1111 $
b1111 '
#20
10
b1111 "
b1111 *
11
1,
b1 +
02
b1110 $
b1110 '
b1 #
b1 &
#30
0!
1G
0E
0F
0?
1@
0=
0>
07
05
06
10
0/
b0 (
18
b1111 "
b1111 *
01
19
1,
0-
13
b10 +
12
0:
b1101 $
b1101 '
b10 #
b10 &
#40
10
b1111 "
b1111 *
11
1,
b11 +
02
b1100 $
b1100 '
b11 #
b11 &
#50
0!
1G
0E
0F
0?
05
0=
06
0>
10
0/
18
07
b0 (
1@
b1111 "
b1111 *
01
09
1A
1,
0-
13
04
1;
b100 +
12
1:
0B
b1011 $
b1011 '
b100 #
b100 &
#60
10
b1111 "
b1111 *
11
1,
b101 +
02
b1010 $
b1010 '
b101 #
b101 &
#70
0!
1G
0E
0F
0?
1@
0=
0>
07
05
06
10
0/
b0 (
18
b1111 "
b1111 *
01
19
1,
0-
13
b110 +
12
0:
b1001 $
b1001 '
b110 #
b110 &
#80
10
b1111 "
b1111 *
11
1,
b111 +
02
b1000 $
b1000 '
b111 #
b111 &
#90
0!
05
0=
0E
06
0>
0F
10
0/
18
07
1@
0?
b0 (
1G
b1111 "
b1111 *
01
09
0A
1H
1,
0-
13
04
1;
0<
1C
b1000 +
12
1:
1B
0I
b111 $
b111 '
b1000 #
b1000 &
#100
10
b1111 "
b1111 *
11
1,
b1001 +
02
b110 $
b110 '
b1001 #
b1001 &
#110
0!
1G
0E
0F
0?
1@
0=
0>
07
05
06
10
0/
b0 (
18
b1111 "
b1111 *
01
19
1,
0-
13
b1010 +
12
0:
b101 $
b101 '
b1010 #
b1010 &
#120
10
b1111 "
b1111 *
11
1,
b1011 +
02
b100 $
b100 '
b1011 #
b1011 &
#130
0!
1G
0E
0F
0?
05
0=
06
0>
10
0/
18
07
b0 (
1@
b1111 "
b1111 *
01
09
1A
1,
0-
13
04
1;
b1100 +
12
1:
0B
b11 $
b11 '
b1100 #
b1100 &
#140
10
b1111 "
b1111 *
11
1,
b1101 +
02
b10 $
b10 '
b1101 #
b1101 &
#150
0!
1G
0E
0F
0?
1@
0=
0>
07
05
06
10
0/
b0 (
18
b1111 "
b1111 *
01
19
1,
0-
13
b1110 +
12
0:
b1 $
b1 '
b1110 #
b1110 &
#160
10
b1111 "
b1111 *
11
1,
b1111 +
02
b0 $
b0 '
b1111 #
b1111 &
#170
1!
0G
1E
1>
1F
16
18
17
1@
1?
01
1/
b111 (
1,
0-
03
14
0;
1<
b1110 +
00
b110 "
b110 *
1.
12
1:
1B
1%
1)
b111 $
b111 '
b1 #
b1 &
#180
1@
1>
16
08
15
17
1/
b111 (
13
04
00
b100 "
b100 *
1.
11
09
1,
b1101 +
02
b110 $
b110 '
b10 #
b10 &
#190
1@
1>
17
b111 (
10
0.
08
b101 "
b101 *
15
19
0,
1-
13
b1111 +
12
0:
b101 $
b101 '
b0 #
b0 &
#200
1@
16
1>
00
1.
1/
17
b111 (
1!
1,
0-
08
15
0G
b100 "
b100 *
1E
01
09
0H
13
04
1C
0D
b100 +
1:
1I
b1111 $
b1111 '
b1011 #
b1011 &
#210
1!
0G
1E
1F
10
0.
18
05
0@
b11 "
b11 *
1=
1?
b111 (
0,
1-
03
14
1;
0<
11
19
0A
b11 +
b1100 #
b1100 &
#220
18
16
00
b10 "
b10 *
1.
1/
b111 (
1,
0-
01
b10 +
b1101 #
b1101 &
#230
1!
0G
1E
1F
1?
0@
1=
1>
10
0.
08
b1 "
b1 *
15
17
b111 (
0,
1-
13
04
11
09
b1 +
b1110 #
b1110 &
#240
1!
0G
1E
1F
1?
0@
1=
1>
17
08
15
16
00
b0 "
b0 *
1.
1/
b111 (
1,
0-
01
b0 +
b1111 #
b1111 &
