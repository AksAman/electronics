=== 2's Complementer ===

One input, one output serial 2's complementer.

==== Problem: ====

Design a one input, one output serial 2's complementer. The circuit accepts a string of bits from the input and generates the 2's complement at the output. The circuit can be reset asynchronously to start and end the operation.

==== Required: ====

# Show the design process and the final logic circuit.
# Simulate your circuit using your preferred simulator. Attach screenshots and/or simulation file.

=== Usage: === 

To compile, use iVerilog for Windows. More information from [http://goo.gl/kXqTY here].

'''Compilation Command:'''

<code>iVerilog dff_async_reset.v compliment.v compliment_tb.v -o compliment_tb.vvp</code>

'''Simulation Command:'''

<code>vvp compliment_tb.vvp -vcd</code>

'''Show wave:'''

<code>GTKWave compliment_tb.dump</code>

=== Discussion: === 

The output is 0 for all 0 inputs until the first 1 occurs at which time, the output is 1. Thereafter, the output is the complement of the input. The ff image is the view of the FSM.

==== State Diagram ====

The following diagram shows the FSM diagram from the description above.

[[File:http://i.imgur.com/fvrn6.png|frame]]

Which evaluates to the ff conclusion.

<code>State 0 : Output = Input

State1 : Output = Complement of input</code>

==== Truth Table ====
{|
|  Previous State || Input || Next State || Output
|-
|   A || X || A || Y
|-
|   0 || 0 || 0 || 0
|-
|   0 || 1 || 1 || 1
|-
|   1 || 0 || 1 || 1
|-
|   1 || 1 || 1 || 0
|}

==== Boolean Representation ====

These are the boolean expressions used to evaluate the value of Y.

<code>DA = A + x

y = A XOR x</code>

==== Circuit Diagram ====

This image shows the final state diagram from which the Verilog code was patterned.

[[File:http://i.imgur.com/RJb3p.png|frame]]

==== For more info: ==== 

Thanks to JM for the solution. ^_^

bangonkali@istoryahi.me

'''Mobile:''' +639993192420

